{"ast":null,"code":"var _jsxFileName = \"C:\\\\Code\\\\redux-essentials-example-app\\\\src\\\\features\\\\posts\\\\AddPostForm.js\",\n    _s = $RefreshSig$();\n\nimport { nanoid } from \"@reduxjs/toolkit\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { postAdded } from \"./postsSlice\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AddPostForm = () => {\n  _s();\n\n  const [title, setTitle] = useState('');\n  const [content, setContent] = useState('');\n  const dispatch = useDispatch();\n\n  const onTitleChanged = e => setTitle(e.target.value);\n\n  const onContentChanged = e => setContent(e.target.value);\n\n  const onSavePostClicked = () => {\n    if (title && content) {\n      dispatch(postAdded({\n        id: nanoid(),\n        title,\n        content\n      }));\n      setTitle('');\n      setContent('');\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Add a New Post\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postTitle\",\n        children: \"Post Title:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        id: \"postTitle\",\n        name: \"postTitle\",\n        value: title,\n        onChange: onTitleChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"postContent\",\n        children: \"Content:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        id: \"postContent\",\n        name: \"postContent\",\n        value: content,\n        onChange: onContentChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: onSavePostClicked,\n        children: \"Save Post\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 9\n  }, this);\n};\n\n_s(AddPostForm, \"0/VwjnJAcxdq8NIz09thNbUoLxg=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddPostForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPostForm\");","map":{"version":3,"sources":["C:/Code/redux-essentials-example-app/src/features/posts/AddPostForm.js"],"names":["nanoid","React","useState","useDispatch","postAdded","AddPostForm","title","setTitle","content","setContent","dispatch","onTitleChanged","e","target","value","onContentChanged","onSavePostClicked","id"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,kBAAvB;AACA,OAAOC,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,cAA1B;;AACA,OAAO,MAAMC,WAAW,GAAG,MAAM;AAAA;;AAC7B,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBP,QAAQ,CAAC,EAAD,CAAtC;AAEA,QAAMQ,QAAQ,GAAGP,WAAW,EAA5B;;AACA,QAAMQ,cAAc,GAAGC,CAAC,IAAIL,QAAQ,CAACK,CAAC,CAACC,MAAF,CAASC,KAAV,CAApC;;AACA,QAAMC,gBAAgB,GAAGH,CAAC,IAAIH,UAAU,CAACG,CAAC,CAACC,MAAF,CAASC,KAAV,CAAxC;;AAEA,QAAME,iBAAiB,GAAG,MAAM;AAC5B,QAAGV,KAAK,IAAIE,OAAZ,EAAqB;AACjBE,MAAAA,QAAQ,CACJN,SAAS,CAAC;AACNa,QAAAA,EAAE,EAAEjB,MAAM,EADJ;AAENM,QAAAA,KAFM;AAGNE,QAAAA;AAHM,OAAD,CADL,CAAR;AAOAD,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,MAAAA,UAAU,CAAC,EAAD,CAAV;AACH;AACJ,GAZD;;AAaA,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA,8BACI;AAAO,QAAA,OAAO,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AACI,QAAA,IAAI,EAAC,MADT;AAEI,QAAA,EAAE,EAAC,WAFP;AAGI,QAAA,IAAI,EAAC,WAHT;AAII,QAAA,KAAK,EAAEH,KAJX;AAKI,QAAA,QAAQ,EAAEK;AALd;AAAA;AAAA;AAAA;AAAA,cAFJ,eASI;AAAO,QAAA,OAAO,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cATJ,eAUI;AACA,QAAA,EAAE,EAAC,aADH;AAEA,QAAA,IAAI,EAAC,aAFL;AAGA,QAAA,KAAK,EAAEH,OAHP;AAIA,QAAA,QAAQ,EAAEO;AAJV;AAAA;AAAA;AAAA;AAAA,cAVJ,eAgBI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,OAAO,EAAEC,iBAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CA5CM;;GAAMX,W;UAIQF,W;;;KAJRE,W","sourcesContent":["import { nanoid } from \"@reduxjs/toolkit\";\r\nimport React, {useState} from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { postAdded } from \"./postsSlice\";\r\nexport const AddPostForm = () => {\r\n    const [title, setTitle] = useState('')\r\n    const [content, setContent] = useState('')\r\n\r\n    const dispatch = useDispatch()\r\n    const onTitleChanged = e => setTitle(e.target.value)\r\n    const onContentChanged = e => setContent(e.target.value)\r\n\r\n    const onSavePostClicked = () => {\r\n        if(title && content) {\r\n            dispatch(\r\n                postAdded({\r\n                    id: nanoid(),\r\n                    title,\r\n                    content\r\n                })\r\n            )\r\n            setTitle('')\r\n            setContent('')            \r\n        }\r\n    }\r\n    return (\r\n        <section>\r\n            <h2>Add a New Post</h2>\r\n            <form>\r\n                <label htmlFor=\"postTitle\">Post Title:</label>\r\n                <input\r\n                    type=\"text\"\r\n                    id=\"postTitle\"\r\n                    name=\"postTitle\"\r\n                    value={title}\r\n                    onChange={onTitleChanged}\r\n                />\r\n                <label htmlFor=\"postContent\">Content:</label>\r\n                <textarea\r\n                id=\"postContent\"\r\n                name=\"postContent\"\r\n                value={content}\r\n                onChange={onContentChanged}\r\n                />\r\n                <button type=\"button\" onClick={onSavePostClicked}>Save Post</button>\r\n            </form>\r\n        </section>\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}